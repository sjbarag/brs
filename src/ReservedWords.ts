import { Lexeme as L } from "./Lexeme";

export const ReservedWords: {[key: string]: L} = {
    and: L.And,
    box: L.Box,
    createobject: L.CreateObject,
    dim: L.Dim,
    each: L.Each,
    else: L.Else,
    elseif: L.ElseIf,
    "else if": L.ElseIf,
    end: L.End,
    endfunction: L.EndFunction,
    "end function": L.EndFunction,
    endif: L.EndIf,
    "end if": L.EndIf,
    endsub: L.EndSub,
    "end sub": L.EndSub,
    endwhile: L.EndWhile,
    "end while": L.EndWhile,
    eval: L.Eval,
    exit: L.Exit,
    "exit for": L.ExitFor, // note: 'exitfor' (no space) is *not* a reserved word
    exitwhile: L.ExitWhile,
    "exit while": L.ExitWhile,
    false: L.False,
    for: L.For,
    function: L.Function,
    getglobalaa: L.GetGlobalAA,
    getlastruncompileerror: L.GetLastRunCompileError,
    getlastrunruntimeerror: L.GetLastRunRunTimeError,
    goto: L.Goto,
    if: L.If,
    invalid: L.Invalid,
    let: L.Let,
    line_num: L.LineNum,
    mod: L.Mod,
    next: L.Next,
    not: L.Not,
    objfun: L.ObjFun,
    or: L.Or,
    pos: L.Pos,
    print: L.Print,
    rem: L.Rem,
    return: L.Return,
    run: L.Run,
    step: L.Step,
    stop: L.Stop,
    sub: L.Sub,
    tab: L.Tab,
    then: L.Then,
    to: L.To,
    true: L.True,
    type: L.Type,
    while: L.While,
};