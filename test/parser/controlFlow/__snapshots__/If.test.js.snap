// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser if statements block if allows 'then' to be skipped 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "text": "<",
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": false,
            },
          },
        },
      ],
    },
    "elseIfs": Array [
      Object {
        "condition": Binary {
          "left": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 1,
            },
          },
          "right": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 2,
            },
          },
          "token": Object {
            "kind": 17,
            "text": ">",
          },
        },
        "thenBranch": Block {
          "statements": Array [
            Assignment {
              "name": Object {
                "kind": 21,
                "text": "foo",
              },
              "value": Literal {
                "value": Int32 {
                  "kind": 3,
                  "value": 3,
                },
              },
            },
            Assignment {
              "name": Object {
                "kind": 21,
                "text": "bar",
              },
              "value": Literal {
                "value": BrsBoolean {
                  "kind": 1,
                  "value": true,
                },
              },
            },
          ],
        },
      },
    ],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements block if parses if only 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "text": "<",
      },
    },
    "elseBranch": undefined,
    "elseIfs": Array [],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "bar",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements block if parses if-else 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "text": "<",
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": false,
            },
          },
        },
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "bar",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
    "elseIfs": Array [],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements block if parses if-elseif-else 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "text": "<",
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": false,
            },
          },
        },
      ],
    },
    "elseIfs": Array [
      Object {
        "condition": Binary {
          "left": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 1,
            },
          },
          "right": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 2,
            },
          },
          "token": Object {
            "kind": 17,
            "text": ">",
          },
        },
        "thenBranch": Block {
          "statements": Array [
            Assignment {
              "name": Object {
                "kind": 21,
                "text": "foo",
              },
              "value": Literal {
                "value": Int32 {
                  "kind": 3,
                  "value": 3,
                },
              },
            },
            Assignment {
              "name": Object {
                "kind": 21,
                "text": "bar",
              },
              "value": Literal {
                "value": BrsBoolean {
                  "kind": 1,
                  "value": true,
                },
              },
            },
          ],
        },
      },
    ],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements single-line if allows 'then' to be skipped 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "line": 1,
        "literal": undefined,
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
    "elseIfs": Array [
      Object {
        "condition": Binary {
          "left": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 1,
            },
          },
          "right": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 2,
            },
          },
          "token": Object {
            "kind": 19,
            "line": 1,
            "literal": undefined,
          },
        },
        "thenBranch": Block {
          "statements": Array [
            Assignment {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "same",
              },
              "value": Literal {
                "value": BrsBoolean {
                  "kind": 1,
                  "value": true,
                },
              },
            },
          ],
        },
      },
    ],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements single-line if parses if only 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "line": 1,
        "literal": undefined,
      },
    },
    "elseBranch": undefined,
    "elseIfs": Array [],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements single-line if parses if-else 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "line": 1,
        "literal": undefined,
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
    "elseIfs": Array [],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;

exports[`parser if statements single-line if parses if-elseif-else 1`] = `
Array [
  If {
    "condition": Binary {
      "left": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 1,
        },
      },
      "right": Literal {
        "value": Int32 {
          "kind": 3,
          "value": 2,
        },
      },
      "token": Object {
        "kind": 15,
        "line": 1,
        "literal": undefined,
      },
    },
    "elseBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
    "elseIfs": Array [
      Object {
        "condition": Binary {
          "left": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 1,
            },
          },
          "right": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 2,
            },
          },
          "token": Object {
            "kind": 19,
            "line": 1,
            "literal": undefined,
          },
        },
        "thenBranch": Block {
          "statements": Array [
            Assignment {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "same",
              },
              "value": Literal {
                "value": BrsBoolean {
                  "kind": 1,
                  "value": true,
                },
              },
            },
          ],
        },
      },
    ],
    "thenBranch": Block {
      "statements": Array [
        Assignment {
          "name": Object {
            "kind": 21,
            "line": 1,
            "text": "foo",
          },
          "value": Literal {
            "value": BrsBoolean {
              "kind": 1,
              "value": true,
            },
          },
        },
      ],
    },
  },
]
`;
