// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser multiplicative expressions parses left-associative division chains 1`] = `
Array [
  Assignment {
    "name": Object {
      "isReserved": false,
      "kind": "Identifier",
      "literal": undefined,
      "location": Object {
        "end": Object {
          "column": -9,
          "line": -9,
        },
        "start": Object {
          "column": -9,
          "line": -9,
        },
      },
      "text": "_",
    },
    "tokens": Object {
      "equals": Object {
        "isReserved": false,
        "kind": "Equal",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "=",
      },
    },
    "type": "Assignment",
    "value": Binary {
      "left": Binary {
        "left": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 7,
          },
        },
        "right": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 5,
          },
        },
        "token": Object {
          "isReserved": false,
          "kind": "Slash",
          "literal": undefined,
          "location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "text": "/",
        },
        "type": "Binary",
      },
      "right": Literal {
        "_location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "type": "Literal",
        "value": Float {
          "kind": 6,
          "value": 3,
        },
      },
      "token": Object {
        "isReserved": false,
        "kind": "Slash",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "/",
      },
      "type": "Binary",
    },
  },
]
`;

exports[`parser multiplicative expressions parses left-associative integer-division chains 1`] = `
Array [
  Assignment {
    "name": Object {
      "isReserved": false,
      "kind": "Identifier",
      "literal": undefined,
      "location": Object {
        "end": Object {
          "column": -9,
          "line": -9,
        },
        "start": Object {
          "column": -9,
          "line": -9,
        },
      },
      "text": "_",
    },
    "tokens": Object {
      "equals": Object {
        "isReserved": false,
        "kind": "Equal",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "=",
      },
    },
    "type": "Assignment",
    "value": Binary {
      "left": Binary {
        "left": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 32.5,
          },
        },
        "right": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 5,
          },
        },
        "token": Object {
          "isReserved": false,
          "kind": "Backslash",
          "literal": undefined,
          "location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "text": "\\\\",
        },
        "type": "Binary",
      },
      "right": Literal {
        "_location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "type": "Literal",
        "value": Float {
          "kind": 6,
          "value": 3,
        },
      },
      "token": Object {
        "isReserved": false,
        "kind": "Backslash",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "\\\\",
      },
      "type": "Binary",
    },
  },
]
`;

exports[`parser multiplicative expressions parses left-associative modulo chains 1`] = `
Array [
  Assignment {
    "name": Object {
      "isReserved": false,
      "kind": "Identifier",
      "literal": undefined,
      "location": Object {
        "end": Object {
          "column": -9,
          "line": -9,
        },
        "start": Object {
          "column": -9,
          "line": -9,
        },
      },
      "text": "_",
    },
    "tokens": Object {
      "equals": Object {
        "isReserved": false,
        "kind": "Equal",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "=",
      },
    },
    "type": "Assignment",
    "value": Binary {
      "left": Binary {
        "left": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 7,
          },
        },
        "right": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 5,
          },
        },
        "token": Object {
          "isReserved": false,
          "kind": "Mod",
          "literal": undefined,
          "location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "text": "MOD",
        },
        "type": "Binary",
      },
      "right": Literal {
        "_location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "type": "Literal",
        "value": Float {
          "kind": 6,
          "value": 3,
        },
      },
      "token": Object {
        "isReserved": false,
        "kind": "Mod",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "MOD",
      },
      "type": "Binary",
    },
  },
]
`;

exports[`parser multiplicative expressions parses left-associative multiplication chains 1`] = `
Array [
  Assignment {
    "name": Object {
      "isReserved": false,
      "kind": "Identifier",
      "literal": undefined,
      "location": Object {
        "end": Object {
          "column": -9,
          "line": -9,
        },
        "start": Object {
          "column": -9,
          "line": -9,
        },
      },
      "text": "_",
    },
    "tokens": Object {
      "equals": Object {
        "isReserved": false,
        "kind": "Equal",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "=",
      },
    },
    "type": "Assignment",
    "value": Binary {
      "left": Binary {
        "left": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 3,
          },
        },
        "right": Literal {
          "_location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "type": "Literal",
          "value": Float {
            "kind": 6,
            "value": 5,
          },
        },
        "token": Object {
          "isReserved": false,
          "kind": "Star",
          "literal": undefined,
          "location": Object {
            "end": Object {
              "column": -9,
              "line": -9,
            },
            "start": Object {
              "column": -9,
              "line": -9,
            },
          },
          "text": "*",
        },
        "type": "Binary",
      },
      "right": Literal {
        "_location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "type": "Literal",
        "value": Float {
          "kind": 6,
          "value": 7,
        },
      },
      "token": Object {
        "isReserved": false,
        "kind": "Star",
        "literal": undefined,
        "location": Object {
          "end": Object {
            "column": -9,
            "line": -9,
          },
          "start": Object {
            "column": -9,
            "line": -9,
          },
        },
        "text": "*",
      },
      "type": "Binary",
    },
  },
]
`;
