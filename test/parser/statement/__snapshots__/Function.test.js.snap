// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser function declarations parses functions with default argument expressions 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 3,
            },
          },
          "name": "a",
          "type": 9,
        },
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 4,
            },
          },
          "name": "b",
          "type": 9,
        },
        Object {
          "defaultValue": Binary {
            "left": Variable {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "a",
              },
            },
            "right": Literal {
              "value": Int32 {
                "kind": 3,
                "value": 5,
              },
            },
            "token": Object {
              "kind": 8,
              "line": 1,
              "text": "+",
            },
          },
          "name": "c",
          "type": 9,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add",
    },
  },
]
`;

exports[`parser function declarations parses functions with implicit-dynamic arguments 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": undefined,
          "name": "a",
          "type": 9,
        },
        Object {
          "defaultValue": undefined,
          "name": "b",
          "type": 9,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add2",
    },
  },
]
`;

exports[`parser function declarations parses functions with typed arguments 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": undefined,
          "name": "str",
          "type": 2,
        },
        Object {
          "defaultValue": undefined,
          "name": "count",
          "type": 3,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "repeat",
    },
  },
]
`;

exports[`parser function declarations parses functions with typed arguments and default expressions 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 3,
            },
          },
          "name": "a",
          "type": 3,
        },
        Object {
          "defaultValue": Binary {
            "left": Variable {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "a",
              },
            },
            "right": Literal {
              "value": Int32 {
                "kind": 3,
                "value": 5,
              },
            },
            "token": Object {
              "kind": 8,
              "line": 1,
              "text": "+",
            },
          },
          "name": "b",
          "type": 3,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add",
    },
  },
]
`;

exports[`parser function declarations parses minimal empty function declarations 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "foo",
    },
  },
]
`;

exports[`parser function declarations parses non-empty function declarations 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [
          Print {
            "expressions": Array [
              Literal {
                "value": BrsString {
                  "kind": 2,
                  "value": "Lorem ipsum",
                },
              },
            ],
          },
        ],
      },
      "parameters": Array [],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "foo",
    },
  },
]
`;

exports[`parser function declarations parses return types 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [],
      "returns": 10,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "foo",
    },
  },
]
`;

exports[`parser sub declarations parses minimal sub declarations 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "bar",
    },
  },
]
`;

exports[`parser sub declarations parses non-empty sub declarations 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [
          Print {
            "expressions": Array [
              Literal {
                "value": BrsString {
                  "kind": 2,
                  "value": "Lorem ipsum",
                },
              },
            ],
          },
        ],
      },
      "parameters": Array [],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "foo",
    },
  },
]
`;

exports[`parser sub declarations parses subs with default argument expressions 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 3,
            },
          },
          "name": "a",
          "type": 9,
        },
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 4,
            },
          },
          "name": "b",
          "type": 9,
        },
        Object {
          "defaultValue": Binary {
            "left": Variable {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "a",
              },
            },
            "right": Literal {
              "value": Int32 {
                "kind": 3,
                "value": 5,
              },
            },
            "token": Object {
              "kind": 8,
              "line": 1,
              "text": "+",
            },
          },
          "name": "c",
          "type": 9,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add",
    },
  },
]
`;

exports[`parser sub declarations parses subs with implicit-dynamic arguments 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": undefined,
          "name": "a",
          "type": 9,
        },
        Object {
          "defaultValue": undefined,
          "name": "b",
          "type": 9,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add2",
    },
  },
]
`;

exports[`parser sub declarations parses subs with typed arguments 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": undefined,
          "name": "str",
          "type": 2,
        },
        Object {
          "defaultValue": undefined,
          "name": "count",
          "type": 3,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "repeat",
    },
  },
]
`;

exports[`parser sub declarations parses subs with typed arguments and default expressions 1`] = `
Array [
  Function {
    "func": Function {
      "body": Block {
        "statements": Array [],
      },
      "parameters": Array [
        Object {
          "defaultValue": Literal {
            "value": Int32 {
              "kind": 3,
              "value": 3,
            },
          },
          "name": "a",
          "type": 3,
        },
        Object {
          "defaultValue": Binary {
            "left": Variable {
              "name": Object {
                "kind": 21,
                "line": 1,
                "text": "a",
              },
            },
            "right": Literal {
              "value": Int32 {
                "kind": 3,
                "value": 5,
              },
            },
            "token": Object {
              "kind": 8,
              "line": 1,
              "text": "+",
            },
          },
          "name": "b",
          "type": 3,
        },
      ],
      "returns": 9,
    },
    "name": Object {
      "kind": 21,
      "line": 1,
      "text": "add",
    },
  },
]
`;
